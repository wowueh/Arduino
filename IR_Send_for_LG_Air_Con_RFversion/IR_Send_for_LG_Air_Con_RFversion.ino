/* rawSend.ino Example sketch for IRLib2
    Illustrates how to send a code Using raw timings which were captured
    from the "rawRecv.ino" sample sketch.  Load that sketch and
    capture the values. They will print in the serial monitor. Then you
    cut and paste that output into the appropriate section below.
*/
#include <IRLibSendBase.h>    //We need the base code
#include <IRLib_HashRaw.h>    //Only use raw sender
#include <EEPROM.h>
#include <RCSwitch.h>

RCSwitch myReceiver = RCSwitch();

IRsendRaw mySender;

#define RAW_DATA_LEN 60
uint16_t rawData[RAW_DATA_LEN];
unsigned long address = 0b1100000000000000;
//
//  /*==================== LG COMMANDS ==================*/
////*PWR ON at 29:
//uint16_t rawData0[RAW_DATA_LEN]={
//  8418, 4242, 506, 1602, 506, 554, 526, 526,
//  530, 526, 530, 1578, 502, 554, 526, 526,
//  530, 526, 530, 526, 526, 526, 530, 526,
//  530, 522, 530, 526, 530, 526, 530, 526,
//  526, 526, 530, 1578, 502, 1606, 506, 1602,
//  506, 550, 530, 526, 530, 1578, 502, 554,
//  526, 530, 526, 526, 530, 526, 530, 1578,
//  502, 554, 526, 1000};
//
////*PWR OFF:
//uint16_t rawData1[RAW_DATA_LEN]={
//  8422, 4238, 506, 1606, 502, 554, 526, 526,
//  530, 526, 530, 1578, 502, 554, 526, 530,
//  526, 526, 530, 1578, 502, 1606, 506, 550,
//  530, 526, 530, 526, 526, 526, 530, 526,
//  530, 522, 530, 526, 530, 526, 526, 526,
//  530, 526, 530, 526, 526, 1582, 502, 550,
//  530, 1578, 506, 550, 530, 526, 530, 526,
//  526, 1582, 502, 1000};
//
////*CHAOS SWING (on/off):
//uint16_t rawData2[RAW_DATA_LEN]={
//  8418, 4242, 506, 1606, 502, 554, 502, 554,
//  498, 554, 502, 1606, 506, 550, 502, 554,
//  498, 554, 502, 554, 502, 554, 498, 554,
//  502, 1606, 502, 554, 502, 554, 498, 554,
//  502, 554, 502, 554, 498, 554, 502, 554,
//  502, 550, 502, 554, 502, 554, 498, 554,
//  502, 554, 502, 554, 498, 554, 502, 554,
//  502, 1606, 502, 1000};
//
////*TURBO ON:
//uint16_t rawData3[RAW_DATA_LEN]={
//  8418, 4238, 506, 1606, 502, 554, 502, 554,
//  502, 554, 498, 1606, 502, 554, 502, 554,
//  502, 554, 518, 534, 502, 554, 502, 554,
//  498, 1606, 506, 550, 502, 554, 502, 554,
//  522, 530, 510, 546, 518, 538, 522, 530,
//  522, 534, 502, 1606, 502, 554, 502, 550,
//  522, 534, 510, 1598, 502, 554, 502, 554,
//  518, 1586, 502, 1000};
//
////*TURBO OFF:
//uint16_t rawData4[RAW_DATA_LEN]={
//  8418, 4242, 502, 1610, 502, 554, 498, 554,
//  502, 554, 502, 1606, 502, 554, 502, 550,
//  502, 554, 502, 554, 498, 554, 502, 554,
//  502, 554, 498, 1606, 506, 550, 502, 554,
//  502, 554, 502, 550, 502, 554, 502, 1606,
//  502, 1606, 502, 554, 502, 1606, 502, 554,
//  502, 554, 498, 1610, 502, 1606, 502, 1606,
//  502, 1606, 502, 1000};
//
//*FAN CHAOS:
uint16_t rawData5[RAW_DATA_LEN]={
  8442, 4218, 530, 1582, 526, 530, 526, 526,
  530, 526, 526, 1582, 526, 530, 526, 530,
  526, 526, 526, 530, 526, 526, 530, 526,
  526, 530, 526, 1578, 530, 526, 530, 526,
  526, 530, 526, 526, 530, 526, 526, 1582,
  526, 1582, 530, 526, 526, 1582, 530, 526,
  526, 1582, 526, 530, 526, 530, 526, 526,
  530, 526, 526, 1000};

//*FAN LVL1:
uint16_t rawData6[RAW_DATA_LEN]={
  8418, 4238, 506, 1606, 502, 554, 502, 554,
  526, 526, 526, 1582, 502, 558, 498, 554,
  526, 530, 526, 526, 526, 530, 526, 530,
  526, 526, 526, 1582, 502, 554, 502, 554,
  526, 526, 526, 530, 526, 530, 526, 1578,
  506, 1606, 502, 554, 502, 550, 526, 530,
  526, 530, 526, 1578, 506, 550, 502, 1606,
  506, 1606, 502, 1000};

//*FAN LVL2:
uint16_t rawData7[RAW_DATA_LEN]={
  8418, 4238, 506, 1606, 502, 558, 498, 554,
  502, 554, 498, 1606, 502, 554, 502, 554,
  502, 554, 498, 554, 502, 554, 502, 554,
  498, 554, 502, 1606, 502, 554, 502, 554,
  498, 554, 502, 554, 502, 554, 498, 1606,
  506, 1606, 502, 554, 498, 554, 502, 1606,
  502, 554, 502, 1606, 502, 1606, 502, 554,
  502, 1606, 502, 1000};

//*FAN LVL3:
uint16_t rawData8[RAW_DATA_LEN]={
  8446, 4210, 538, 1574, 534, 522, 534, 522,
  530, 522, 534, 1574, 538, 518, 534, 522,
  534, 522, 530, 522, 534, 522, 534, 518,
  534, 522, 534, 1574, 534, 522, 534, 522,
  530, 522, 534, 1574, 538, 518, 534, 522,
  534, 518, 534, 522, 534, 1574, 534, 522,
  534, 522, 534, 518, 534, 1574, 538, 518,
  538, 518, 534, 1000};
//
//*FAN MODE:
uint16_t rawData9[RAW_DATA_LEN] = {
  8418, 4238, 506, 1606, 502, 554, 502, 554,
  502, 554, 498, 1610, 502, 554, 498, 554,
  502, 554, 502, 550, 502, 554, 502, 554,
  498, 554, 502, 1606, 502, 554, 502, 1606,
  502, 554, 502, 554, 502, 550, 502, 1606,
  502, 1606, 506, 554, 498, 1606, 502, 554,
  502, 554, 502, 554, 502, 550, 502, 554,
  502, 1606, 502, 1000
};
//
//*COOL MODE:
uint16_t rawData10[RAW_DATA_LEN] = {
  8418, 4238, 506, 1606, 502, 554, 522, 534,
  526, 530, 526, 1578, 502, 554, 502, 554,
  526, 530, 526, 526, 526, 530, 526, 526,
  530, 526, 526, 1582, 502, 554, 502, 554,
  526, 526, 526, 530, 526, 526, 530, 1578,
  506, 1606, 502, 554, 502, 1602, 506, 554,
  498, 554, 526, 1582, 502, 1606, 502, 1610,
  502, 1606, 502, 1000
};
//
//*AUTO MODE:
uint16_t rawData11[RAW_DATA_LEN] = {
  8418, 4238, 506, 1606, 506, 550, 530, 526,
  530, 526, 526, 1578, 506, 554, 526, 526,
  530, 526, 526, 526, 530, 526, 530, 526,
  526, 526, 530, 1578, 506, 550, 526, 1582,
  502, 1606, 506, 550, 534, 522, 530, 1578,
  502, 554, 526, 530, 526, 1578, 506, 554,
  526, 1578, 506, 550, 530, 526, 530, 1578,
  502, 554, 526, 1000
};

//*AUTO MODE L1
uint16_t rawData12[RAW_DATA_LEN] = {
  8418, 4238, 506, 1606, 506, 550, 530, 526,
  530, 526, 526, 1582, 502, 550, 530, 526,
  530, 526, 526, 526, 530, 526, 530, 526,
  526, 526, 530, 1578, 506, 550, 530, 1578,
  502, 1606, 506, 550, 530, 526, 530, 526,
  526, 1582, 502, 554, 526, 1578, 506, 554,
  526, 1578, 506, 554, 526, 526, 530, 526,
  526, 1582, 502, 1000
};

//*AUTO MODE L2
uint16_t rawData13[RAW_DATA_LEN] = {
  8418, 4238, 506, 1606, 506, 550, 530, 526,
  526, 530, 526, 1582, 502, 554, 526, 526,
  530, 526, 526, 526, 530, 526, 530, 526,
  526, 526, 530, 1578, 506, 550, 526, 1582,
  502, 1606, 506, 554, 526, 526, 530, 526,
  526, 526, 530, 526, 526, 1582, 502, 554,
  502, 1606, 502, 554, 502, 550, 530, 526,
  526, 530, 526, 1000
};

//*AUTO MODE H1
uint16_t rawData14[RAW_DATA_LEN] = {
  8418, 4238, 506, 1606, 502, 554, 526, 530,
  526, 530, 526, 1578, 506, 550, 526, 530,
  526, 530, 526, 526, 530, 526, 526, 526,
  530, 526, 530, 1578, 502, 554, 526, 1582,
  502, 1606, 502, 554, 526, 530, 526, 1582,
  502, 1606, 502, 554, 526, 1582, 502, 554,
  526, 1582, 502, 554, 526, 526, 530, 1578,
  506, 1606, 502, 1000
};

//*AUTO MODE H2
uint16_t rawData15[RAW_DATA_LEN] = {
  8418, 4242, 506, 1602, 506, 554, 526, 526,
  530, 526, 526, 1582, 502, 554, 526, 526,
  530, 526, 530, 522, 530, 526, 530, 526,
  526, 526, 534, 1574, 506, 554, 526, 1578,
  506, 1602, 506, 554, 526, 1578, 506, 550,
  530, 526, 530, 526, 526, 1582, 502, 554,
  526, 1578, 506, 554, 526, 1578, 506, 550,
  530, 526, 530, 1000
};
//
//
////*DRY MODE:
//uint16_t rawData16[RAW_DATA_LEN]={
//  8422, 4238, 506, 1606, 502, 554, 526, 526,
//  530, 526, 530, 1578, 502, 554, 526, 530,
//  526, 526, 530, 526, 530, 522, 530, 526,
//  530, 526, 530, 1578, 502, 554, 526, 526,
//  530, 1578, 506, 1602, 506, 550, 530, 526,
//  530, 526, 526, 526, 530, 526, 530, 526,
//  526, 526, 530, 526, 530, 526, 526, 526,
//  530, 1578, 502, 1000};
//
////*SLEEP 0:
//uint16_t rawData17[RAW_DATA_LEN]={
//  8418, 4242, 502, 1610, 502, 554, 498, 554,
//  502, 554, 502, 1606, 502, 554, 498, 554,
//  502, 554, 502, 1606, 502, 554, 502, 1606,
//  502, 554, 502, 554, 498, 554, 506, 550,
//  502, 554, 498, 554, 502, 554, 498, 554,
//  502, 554, 502, 554, 498, 554, 502, 554,
//  502, 550, 502, 1606, 502, 554, 502, 1606,
//  502, 554, 502, 1000};
//
////*SLEEP 1:
//uint16_t rawData18[RAW_DATA_LEN]={
//  8418, 4238, 506, 1606, 502, 554, 502, 554,
//  502, 554, 498, 1606, 506, 550, 502, 554,
//  502, 554, 502, 1606, 502, 554, 498, 1606,
//  506, 554, 498, 554, 502, 554, 502, 550,
//  502, 554, 502, 554, 502, 550, 502, 1606,
//  502, 1606, 506, 1606, 502, 1606, 502, 554,
//  502, 554, 498, 1606, 506, 554, 498, 554,
//  502, 1606, 502, 1000};
//
////*SLEEP 2:
//uint16_t rawData19[RAW_DATA_LEN]={
//  8418, 4238, 506, 1606, 502, 554, 526, 530,
//  526, 526, 530, 1578, 506, 550, 530, 526,
//  530, 526, 526, 1578, 506, 550, 530, 1578,
//  506, 550, 530, 526, 530, 522, 530, 526,
//  530, 526, 530, 526, 526, 1578, 506, 1602,
//  506, 1606, 502, 1606, 502, 554, 530, 526,
//  526, 526, 530, 1578, 506, 550, 530, 526,
//  530, 1578, 502, 1000};
//
////*SLEEP 3:
//uint16_t rawData20[RAW_DATA_LEN]={
//  8418, 4242, 506, 1606, 502, 554, 526, 526,
//  530, 526, 526, 1582, 526, 530, 526, 530,
//  526, 526, 530, 1582, 522, 530, 526, 1582,
//  526, 530, 526, 530, 526, 526, 530, 526,
//  526, 530, 526, 1578, 530, 530, 526, 1578,
//  530, 1582, 526, 530, 526, 1578, 530, 530,
//  526, 526, 526, 1582, 530, 526, 526, 530,
//  526, 1582, 526, 1000};
//
////*SLEEP 4:
//uint16_t rawData21[RAW_DATA_LEN]={
//  8418, 4238, 506, 1606, 502, 554, 526, 530,
//  526, 526, 530, 1578, 506, 550, 526, 530,
//  530, 526, 526, 1578, 506, 554, 522, 1586,
//  502, 550, 526, 530, 530, 526, 526, 526,
//  530, 526, 530, 1578, 502, 1606, 502, 1606,
//  506, 1606, 502, 554, 526, 526, 530, 526,
//  530, 526, 526, 1578, 506, 554, 522, 530,
//  530, 1578, 502, 1000};
//
////*SLEEP 5:
//uint16_t rawData22[RAW_DATA_LEN]={
//  8422, 4238, 506, 1606, 502, 554, 502, 550,
//  522, 534, 502, 1606, 502, 554, 502, 554,
//  502, 550, 502, 1606, 502, 554, 502, 1606,
//  502, 554, 502, 554, 522, 530, 526, 530,
//  526, 1582, 502, 554, 502, 554, 522, 1582,
//  506, 550, 502, 1606, 502, 1610, 502, 554,
//  498, 554, 526, 1586, 498, 554, 502, 554,
//  526, 1582, 502, 1000};
//
////*SLEEP 6:
//uint16_t rawData23[RAW_DATA_LEN]={
//  8418, 4242, 506, 1602, 506, 554, 526, 526,
//  530, 526, 530, 1578, 502, 554, 526, 526,
//  530, 526, 530, 1578, 502, 554, 526, 1582,
//  502, 554, 526, 526, 530, 526, 530, 526,
//  526, 1578, 506, 554, 526, 1578, 506, 1606,
//  502, 554, 526, 1582, 502, 554, 526, 526,
//  530, 526, 530, 1578, 502, 554, 526, 526,
//  530, 1578, 506, 1000};
//
////*SLEEP 7:
//uint16_t rawData24[RAW_DATA_LEN]={
//  8418, 4238, 506, 1606, 502, 554, 502, 554,
//  522, 530, 526, 1582, 502, 554, 502, 554,
//  526, 530, 526, 1578, 506, 554, 498, 1606,
//  506, 550, 502, 554, 526, 530, 526, 526,
//  526, 1582, 502, 1606, 506, 550, 526, 1582,
//  506, 550, 526, 530, 526, 1582, 502, 554,
//  526, 530, 526, 1578, 506, 550, 526, 530,
//  526, 1582, 502, 1000};
//
//
////*TEMP 29:
//uint16_t rawData25[RAW_DATA_LEN]={
//  8450, 4210, 538, 1574, 534, 522, 530, 522,
//  534, 522, 534, 1574, 534, 522, 534, 522,
//  530, 522, 534, 522, 530, 526, 530, 522,
//  534, 522, 530, 1578, 534, 522, 530, 522,
//  534, 522, 530, 1578, 534, 1574, 534, 1574,
//  538, 518, 534, 522, 530, 1578, 534, 522,
//  530, 522, 534, 1574, 538, 518, 534, 1574,
//  534, 522, 534, 1000};
////*TEMP 28:
//uint16_t rawData26[RAW_DATA_LEN]={
//  8446, 4214, 530, 1582, 526, 530, 530, 522,
//  530, 526, 526, 1582, 526, 530, 526, 526,
//  530, 526, 530, 526, 526, 526, 530, 526,
//  526, 530, 526, 1578, 530, 526, 530, 526,
//  530, 526, 526, 1582, 526, 1582, 526, 530,
//  526, 1582, 526, 530, 526, 1582, 526, 530,
//  526, 526, 530, 1578, 530, 526, 530, 526,
//  526, 1582, 526, 1000};
////*TEMP 27:
//uint16_t rawData27[RAW_DATA_LEN]={
//  8446, 4210, 534, 1578, 530, 526, 530, 526,
//  530, 526, 526, 1578, 530, 526, 530, 526,
//  530, 526, 526, 526, 530, 526, 530, 526,
//  526, 526, 530, 1578, 530, 526, 530, 526,
//  526, 526, 530, 1578, 530, 1582, 526, 530,
//  526, 526, 530, 526, 526, 1582, 526, 530,
//  526, 526, 530, 1578, 530, 526, 530, 526,
//  526, 526, 530, 1000};
////*TEMP 26:
//uint16_t rawData28[RAW_DATA_LEN]={
//  8442, 4214, 530, 1582, 530, 526, 530, 526,
//  526, 530, 526, 1578, 530, 526, 530, 526,
//  526, 530, 526, 526, 530, 526, 526, 530,
//  526, 526, 530, 1578, 530, 526, 526, 530,
//  526, 526, 530, 1578, 530, 526, 526, 1582,
//  530, 1578, 530, 526, 530, 1578, 530, 526,
//  526, 530, 526, 530, 526, 1578, 530, 1582,
//  526, 1582, 526, 1000};
///*===============================================*/


//POINTER:


void setup() {
  myReceiver.enableReceive(0);
  Serial.begin(9600);
}

void loop() {

  if (myReceiver.available())
  {
    unsigned long i = myReceiver.getReceivedValue();
    if (i >> 8 == address)
    {
      int c = (i << 24) >> 24;
      switch (c)
      {
        case 9:
          mySender.send(rawData11, RAW_DATA_LEN, 36);
          break;
        case 10:
          mySender.send(rawData12, RAW_DATA_LEN, 36);
          break;
        case 11:
          mySender.send(rawData13, RAW_DATA_LEN, 36);
          break;
        case 12:
          mySender.send(rawData14, RAW_DATA_LEN, 36);
          break;
        case 13:
          mySender.send(rawData15, RAW_DATA_LEN, 36);
          break;
        case 14:
          mySender.send(rawData10, RAW_DATA_LEN, 36);
          break;
        case 15:
          mySender.send(rawData9, RAW_DATA_LEN, 36);
          break;
        case 16:
          mySender.send(rawData5, RAW_DATA_LEN, 36);
          break;
        case 17:
          mySender.send(rawData6, RAW_DATA_LEN, 36);
          break;
        case 18:
          mySender.send(rawData7, RAW_DATA_LEN, 36);
          break;
        case 19:
          mySender.send(rawData8, RAW_DATA_LEN, 36);
          break;
        default:
          EEPROM.get(c * 120, rawData);
          mySender.send(rawData, RAW_DATA_LEN, 36); //Pass the buffer,length, optionally frequency
      }
    }
    myReceiver.resetAvailable();
  }
}

